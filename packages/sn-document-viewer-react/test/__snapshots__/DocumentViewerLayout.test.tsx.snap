// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Document Viewer Layout component should match snapshot with thumbnails turned off 1`] = `
<Component>
  <div
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
        "height": "100%",
        "width": "100%",
      }
    }
  >
    some children
    <div
      style={
        Object {
          "display": "flex",
          "height": "100%",
          "overflow": "hidden",
          "position": "relative",
          "width": "100%",
          "zIndex": 0,
        }
      }
    >
      <WithStyles(ForwardRef(Drawer))
        PaperProps={
          Object {
            "style": Object {
              "height": "100%",
              "overflow": "hidden",
              "position": "relative",
              "width": 0,
            },
          }
        }
        anchor="left"
        open={false}
        variant="persistent"
      >
        <ForwardRef(Drawer)
          PaperProps={
            Object {
              "style": Object {
                "height": "100%",
                "overflow": "hidden",
                "position": "relative",
                "width": 0,
              },
            }
          }
          anchor="left"
          classes={
            Object {
              "docked": "MuiDrawer-docked",
              "modal": "MuiDrawer-modal",
              "paper": "MuiDrawer-paper",
              "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
              "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
              "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
              "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
              "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
              "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
              "paperAnchorRight": "MuiDrawer-paperAnchorRight",
              "paperAnchorTop": "MuiDrawer-paperAnchorTop",
              "root": "MuiDrawer-root",
            }
          }
          open={false}
          variant="persistent"
        >
          <div
            className="MuiDrawer-root MuiDrawer-docked"
          >
            <ForwardRef(Slide)
              appear={false}
              direction="right"
              in={false}
              timeout={
                Object {
                  "enter": 225,
                  "exit": 195,
                }
              }
            >
              <Transition
                appear={false}
                enter={true}
                exit={true}
                in={false}
                mountOnEnter={false}
                onEnter={[Function]}
                onEntered={[Function]}
                onEntering={[Function]}
                onExit={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
                unmountOnExit={false}
              >
                <WithStyles(ForwardRef(Paper))
                  className="MuiDrawer-paper MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                  elevation={0}
                  square={true}
                  style={
                    Object {
                      "height": "100%",
                      "overflow": "hidden",
                      "position": "relative",
                      "visibility": "hidden",
                      "width": 0,
                    }
                  }
                >
                  <ForwardRef(Paper)
                    className="MuiDrawer-paper MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                    classes={
                      Object {
                        "elevation0": "MuiPaper-elevation0",
                        "elevation1": "MuiPaper-elevation1",
                        "elevation10": "MuiPaper-elevation10",
                        "elevation11": "MuiPaper-elevation11",
                        "elevation12": "MuiPaper-elevation12",
                        "elevation13": "MuiPaper-elevation13",
                        "elevation14": "MuiPaper-elevation14",
                        "elevation15": "MuiPaper-elevation15",
                        "elevation16": "MuiPaper-elevation16",
                        "elevation17": "MuiPaper-elevation17",
                        "elevation18": "MuiPaper-elevation18",
                        "elevation19": "MuiPaper-elevation19",
                        "elevation2": "MuiPaper-elevation2",
                        "elevation20": "MuiPaper-elevation20",
                        "elevation21": "MuiPaper-elevation21",
                        "elevation22": "MuiPaper-elevation22",
                        "elevation23": "MuiPaper-elevation23",
                        "elevation24": "MuiPaper-elevation24",
                        "elevation3": "MuiPaper-elevation3",
                        "elevation4": "MuiPaper-elevation4",
                        "elevation5": "MuiPaper-elevation5",
                        "elevation6": "MuiPaper-elevation6",
                        "elevation7": "MuiPaper-elevation7",
                        "elevation8": "MuiPaper-elevation8",
                        "elevation9": "MuiPaper-elevation9",
                        "root": "MuiPaper-root",
                        "rounded": "MuiPaper-rounded",
                      }
                    }
                    elevation={0}
                    square={true}
                    style={
                      Object {
                        "height": "100%",
                        "overflow": "hidden",
                        "position": "relative",
                        "visibility": "hidden",
                        "width": 0,
                      }
                    }
                  >
                    <div
                      className="MuiPaper-root MuiPaper-elevation0 MuiDrawer-paper MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                      style={
                        Object {
                          "height": "100%",
                          "overflow": "hidden",
                          "position": "relative",
                          "visibility": "hidden",
                          "width": 0,
                        }
                      }
                    >
                      <Component
                        activePage={1}
                        elementName="Thumbnail"
                        fitRelativeZoomLevel={0}
                        id="sn-document-viewer-thumbnails"
                        images="thumbnail"
                        onPageClick={[Function]}
                        padding={16}
                        showWidgets={false}
                        style={
                          Object {
                            "marginRight": "-16px",
                            "minWidth": 200,
                            "paddingRight": 0,
                          }
                        }
                        tolerance={0}
                        zoomLevel={1}
                        zoomMode="fit"
                      >
                        <WithStyles(ForwardRef(Grid))
                          id="sn-document-viewer-thumbnails"
                          innerRef={
                            Object {
                              "current": <div
                                class="MuiGrid-root MuiGrid-item"
                                id="sn-document-viewer-thumbnails"
                                style="min-width: 200px; margin-right: -16px; padding-right: 0px; flex-grow: 1; flex-shrink: 1; overflow: auto; height: 100%;"
                              >
                                <div
                                  style="display: flex; flex-direction: column; justify-content: center; align-items: center; padding-top: 0px; padding-bottom: 0px;"
                                />
                              </div>,
                            }
                          }
                          item={true}
                          style={
                            Object {
                              "flexGrow": 1,
                              "flexShrink": 1,
                              "height": "100%",
                              "marginRight": "-16px",
                              "minWidth": 200,
                              "overflow": "auto",
                              "paddingRight": 0,
                            }
                          }
                        >
                          <ForwardRef(Grid)
                            classes={
                              Object {
                                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                "container": "MuiGrid-container",
                                "direction-xs-column": "MuiGrid-direction-xs-column",
                                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                "grid-lg-1": "MuiGrid-grid-lg-1",
                                "grid-lg-10": "MuiGrid-grid-lg-10",
                                "grid-lg-11": "MuiGrid-grid-lg-11",
                                "grid-lg-12": "MuiGrid-grid-lg-12",
                                "grid-lg-2": "MuiGrid-grid-lg-2",
                                "grid-lg-3": "MuiGrid-grid-lg-3",
                                "grid-lg-4": "MuiGrid-grid-lg-4",
                                "grid-lg-5": "MuiGrid-grid-lg-5",
                                "grid-lg-6": "MuiGrid-grid-lg-6",
                                "grid-lg-7": "MuiGrid-grid-lg-7",
                                "grid-lg-8": "MuiGrid-grid-lg-8",
                                "grid-lg-9": "MuiGrid-grid-lg-9",
                                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                "grid-lg-true": "MuiGrid-grid-lg-true",
                                "grid-md-1": "MuiGrid-grid-md-1",
                                "grid-md-10": "MuiGrid-grid-md-10",
                                "grid-md-11": "MuiGrid-grid-md-11",
                                "grid-md-12": "MuiGrid-grid-md-12",
                                "grid-md-2": "MuiGrid-grid-md-2",
                                "grid-md-3": "MuiGrid-grid-md-3",
                                "grid-md-4": "MuiGrid-grid-md-4",
                                "grid-md-5": "MuiGrid-grid-md-5",
                                "grid-md-6": "MuiGrid-grid-md-6",
                                "grid-md-7": "MuiGrid-grid-md-7",
                                "grid-md-8": "MuiGrid-grid-md-8",
                                "grid-md-9": "MuiGrid-grid-md-9",
                                "grid-md-auto": "MuiGrid-grid-md-auto",
                                "grid-md-true": "MuiGrid-grid-md-true",
                                "grid-sm-1": "MuiGrid-grid-sm-1",
                                "grid-sm-10": "MuiGrid-grid-sm-10",
                                "grid-sm-11": "MuiGrid-grid-sm-11",
                                "grid-sm-12": "MuiGrid-grid-sm-12",
                                "grid-sm-2": "MuiGrid-grid-sm-2",
                                "grid-sm-3": "MuiGrid-grid-sm-3",
                                "grid-sm-4": "MuiGrid-grid-sm-4",
                                "grid-sm-5": "MuiGrid-grid-sm-5",
                                "grid-sm-6": "MuiGrid-grid-sm-6",
                                "grid-sm-7": "MuiGrid-grid-sm-7",
                                "grid-sm-8": "MuiGrid-grid-sm-8",
                                "grid-sm-9": "MuiGrid-grid-sm-9",
                                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                "grid-sm-true": "MuiGrid-grid-sm-true",
                                "grid-xl-1": "MuiGrid-grid-xl-1",
                                "grid-xl-10": "MuiGrid-grid-xl-10",
                                "grid-xl-11": "MuiGrid-grid-xl-11",
                                "grid-xl-12": "MuiGrid-grid-xl-12",
                                "grid-xl-2": "MuiGrid-grid-xl-2",
                                "grid-xl-3": "MuiGrid-grid-xl-3",
                                "grid-xl-4": "MuiGrid-grid-xl-4",
                                "grid-xl-5": "MuiGrid-grid-xl-5",
                                "grid-xl-6": "MuiGrid-grid-xl-6",
                                "grid-xl-7": "MuiGrid-grid-xl-7",
                                "grid-xl-8": "MuiGrid-grid-xl-8",
                                "grid-xl-9": "MuiGrid-grid-xl-9",
                                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                "grid-xl-true": "MuiGrid-grid-xl-true",
                                "grid-xs-1": "MuiGrid-grid-xs-1",
                                "grid-xs-10": "MuiGrid-grid-xs-10",
                                "grid-xs-11": "MuiGrid-grid-xs-11",
                                "grid-xs-12": "MuiGrid-grid-xs-12",
                                "grid-xs-2": "MuiGrid-grid-xs-2",
                                "grid-xs-3": "MuiGrid-grid-xs-3",
                                "grid-xs-4": "MuiGrid-grid-xs-4",
                                "grid-xs-5": "MuiGrid-grid-xs-5",
                                "grid-xs-6": "MuiGrid-grid-xs-6",
                                "grid-xs-7": "MuiGrid-grid-xs-7",
                                "grid-xs-8": "MuiGrid-grid-xs-8",
                                "grid-xs-9": "MuiGrid-grid-xs-9",
                                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                "grid-xs-true": "MuiGrid-grid-xs-true",
                                "item": "MuiGrid-item",
                                "justify-xs-center": "MuiGrid-justify-xs-center",
                                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                "root": "MuiGrid-root",
                                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                "zeroMinWidth": "MuiGrid-zeroMinWidth",
                              }
                            }
                            id="sn-document-viewer-thumbnails"
                            item={true}
                            style={
                              Object {
                                "flexGrow": 1,
                                "flexShrink": 1,
                                "height": "100%",
                                "marginRight": "-16px",
                                "minWidth": 200,
                                "overflow": "auto",
                                "paddingRight": 0,
                              }
                            }
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item"
                              id="sn-document-viewer-thumbnails"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "height": "100%",
                                  "marginRight": "-16px",
                                  "minWidth": 200,
                                  "overflow": "auto",
                                  "paddingRight": 0,
                                }
                              }
                            >
                              <div
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "display": "flex",
                                    "flexDirection": "column",
                                    "justifyContent": "center",
                                    "paddingBottom": 0,
                                    "paddingTop": 0,
                                  }
                                }
                              />
                            </div>
                          </ForwardRef(Grid)>
                        </WithStyles(ForwardRef(Grid))>
                      </Component>
                    </div>
                  </ForwardRef(Paper)>
                </WithStyles(ForwardRef(Paper))>
              </Transition>
            </ForwardRef(Slide)>
          </div>
        </ForwardRef(Drawer)>
      </WithStyles(ForwardRef(Drawer))>
      <Component
        activePage={1}
        elementName="Page"
        fitRelativeZoomLevel={0}
        id="sn-document-viewer-pages"
        images="preview"
        onPageClick={[Function]}
        padding={8}
        showWidgets={true}
        tolerance={0}
        zoomLevel={3}
        zoomMode="fit"
      >
        <WithStyles(ForwardRef(Grid))
          id="sn-document-viewer-pages"
          innerRef={
            Object {
              "current": <div
                class="MuiGrid-root MuiGrid-item"
                id="sn-document-viewer-pages"
                style="flex-grow: 1; flex-shrink: 1; overflow: auto; height: 100%;"
              >
                <div
                  style="display: flex; flex-direction: column; justify-content: center; align-items: center; padding-top: 0px; padding-bottom: 0px;"
                />
              </div>,
            }
          }
          item={true}
          style={
            Object {
              "flexGrow": 1,
              "flexShrink": 1,
              "height": "100%",
              "overflow": "auto",
            }
          }
        >
          <ForwardRef(Grid)
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-xs-center": "MuiGrid-justify-xs-center",
                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            id="sn-document-viewer-pages"
            item={true}
            style={
              Object {
                "flexGrow": 1,
                "flexShrink": 1,
                "height": "100%",
                "overflow": "auto",
              }
            }
          >
            <div
              className="MuiGrid-root MuiGrid-item"
              id="sn-document-viewer-pages"
              style={
                Object {
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "height": "100%",
                  "overflow": "auto",
                }
              }
            >
              <div
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "paddingBottom": 0,
                    "paddingTop": 0,
                  }
                }
              />
            </div>
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
      </Component>
      <WithStyles(ForwardRef(Drawer))
        PaperProps={
          Object {
            "style": Object {
              "height": "100%",
              "overflow": "hidden",
              "position": "relative",
              "width": 0,
            },
          }
        }
        anchor="right"
        open={false}
        variant="persistent"
      >
        <ForwardRef(Drawer)
          PaperProps={
            Object {
              "style": Object {
                "height": "100%",
                "overflow": "hidden",
                "position": "relative",
                "width": 0,
              },
            }
          }
          anchor="right"
          classes={
            Object {
              "docked": "MuiDrawer-docked",
              "modal": "MuiDrawer-modal",
              "paper": "MuiDrawer-paper",
              "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
              "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
              "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
              "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
              "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
              "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
              "paperAnchorRight": "MuiDrawer-paperAnchorRight",
              "paperAnchorTop": "MuiDrawer-paperAnchorTop",
              "root": "MuiDrawer-root",
            }
          }
          open={false}
          variant="persistent"
        >
          <div
            className="MuiDrawer-root MuiDrawer-docked"
          >
            <ForwardRef(Slide)
              appear={false}
              direction="left"
              in={false}
              timeout={
                Object {
                  "enter": 225,
                  "exit": 195,
                }
              }
            >
              <Transition
                appear={false}
                enter={true}
                exit={true}
                in={false}
                mountOnEnter={false}
                onEnter={[Function]}
                onEntered={[Function]}
                onEntering={[Function]}
                onExit={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
                unmountOnExit={false}
              >
                <WithStyles(ForwardRef(Paper))
                  className="MuiDrawer-paper MuiDrawer-paperAnchorRight MuiDrawer-paperAnchorDockedRight"
                  elevation={0}
                  square={true}
                  style={
                    Object {
                      "height": "100%",
                      "overflow": "hidden",
                      "position": "relative",
                      "visibility": "hidden",
                      "width": 0,
                    }
                  }
                >
                  <ForwardRef(Paper)
                    className="MuiDrawer-paper MuiDrawer-paperAnchorRight MuiDrawer-paperAnchorDockedRight"
                    classes={
                      Object {
                        "elevation0": "MuiPaper-elevation0",
                        "elevation1": "MuiPaper-elevation1",
                        "elevation10": "MuiPaper-elevation10",
                        "elevation11": "MuiPaper-elevation11",
                        "elevation12": "MuiPaper-elevation12",
                        "elevation13": "MuiPaper-elevation13",
                        "elevation14": "MuiPaper-elevation14",
                        "elevation15": "MuiPaper-elevation15",
                        "elevation16": "MuiPaper-elevation16",
                        "elevation17": "MuiPaper-elevation17",
                        "elevation18": "MuiPaper-elevation18",
                        "elevation19": "MuiPaper-elevation19",
                        "elevation2": "MuiPaper-elevation2",
                        "elevation20": "MuiPaper-elevation20",
                        "elevation21": "MuiPaper-elevation21",
                        "elevation22": "MuiPaper-elevation22",
                        "elevation23": "MuiPaper-elevation23",
                        "elevation24": "MuiPaper-elevation24",
                        "elevation3": "MuiPaper-elevation3",
                        "elevation4": "MuiPaper-elevation4",
                        "elevation5": "MuiPaper-elevation5",
                        "elevation6": "MuiPaper-elevation6",
                        "elevation7": "MuiPaper-elevation7",
                        "elevation8": "MuiPaper-elevation8",
                        "elevation9": "MuiPaper-elevation9",
                        "root": "MuiPaper-root",
                        "rounded": "MuiPaper-rounded",
                      }
                    }
                    elevation={0}
                    square={true}
                    style={
                      Object {
                        "height": "100%",
                        "overflow": "hidden",
                        "position": "relative",
                        "visibility": "hidden",
                        "width": 0,
                      }
                    }
                  >
                    <div
                      className="MuiPaper-root MuiPaper-elevation0 MuiDrawer-paper MuiDrawer-paperAnchorRight MuiDrawer-paperAnchorDockedRight"
                      style={
                        Object {
                          "height": "100%",
                          "overflow": "hidden",
                          "position": "relative",
                          "visibility": "hidden",
                          "width": 0,
                        }
                      }
                    >
                      <Component
                        images="preview"
                        page={1}
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bZQynM",
                                  "isStatic": true,
                                  "lastClassName": "bMjaxC",
                                  "rules": Array [
                                    "
  display: flex;
  padding: 15px;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  overflow: auto;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bZQynM",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={
                              Object {
                                "current": <div
                                  class="sc-bZQynM bMjaxC"
                                >
                                  <h4
                                    class="MuiTypography-root MuiTypography-h4"
                                  >
                                    Comments
                                  </h4>
                                  <button
                                    class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                    tabindex="0"
                                    type="button"
                                  >
                                    <span
                                      class="MuiButton-label"
                                    >
                                      + Add Comment
                                    </span>
                                    <span
                                      class="MuiTouchRipple-root"
                                    />
                                  </button>
                                </div>,
                              }
                            }
                          >
                            <div
                              className="sc-bZQynM bMjaxC"
                            >
                              <WithStyles(ForwardRef(Typography))
                                variant="h4"
                              >
                                <ForwardRef(Typography)
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  variant="h4"
                                >
                                  <h4
                                    className="MuiTypography-root MuiTypography-h4"
                                  >
                                    Comments
                                  </h4>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <CreateComment
                                createComment={[Function]}
                                handleInputValueChange={[Function]}
                                handleIsActive={[Function]}
                                inputValue=""
                                isActive={false}
                                localization={
                                  Object {
                                    "addComment": "+ Add Comment",
                                    "avatarAlt": "Picture of the commenter",
                                    "cancelButton": "Cancel",
                                    "commentInputPlaceholder": "Make a comment",
                                    "commentSideBarTitle": "Comments",
                                    "delete": "Delete",
                                    "deleteCommentDialogBody": "1 comment is about to permanently deleted. <br /><strong>Warning: You can't undo this action.</strong>",
                                    "deleteCommentDialogTitle": "Delete comment?",
                                    "download": "Download",
                                    "errorLoadingDetails": "The following error occured during opening a document: ",
                                    "errorLoadingDocument": Array [
                                      Object {
                                        "details": "",
                                        "message": "No preview available, because the document is empty!",
                                        "state": 0,
                                      },
                                      Object {
                                        "code": 500,
                                        "details": "An unexpected error seems to have occured. Why not try refreshing your page? If the page still not working try to check back later.",
                                        "message": "Ooops! Something went wrong...",
                                        "state": 0,
                                      },
                                      Object {
                                        "code": 404,
                                        "details": "You don't have permission to see this document 
 The document you are trying to open has been deleted 
 The document has been moved to another place ",
                                        "message": "Ooops! Something went wrong...",
                                        "state": 0,
                                      },
                                      Object {
                                        "details": "",
                                        "message": "Error during preview generation! No preview available.",
                                        "state": -3,
                                      },
                                      Object {
                                        "details": "",
                                        "message": "The preview image generation has been postponed.",
                                        "state": -4,
                                      },
                                      Object {
                                        "details": "",
                                        "message": "No preview available, because this type of file is not supported!",
                                        "state": -2,
                                      },
                                      Object {
                                        "details": "",
                                        "message": "There is no preview provider enabled",
                                        "state": -5,
                                      },
                                    ],
                                    "firstPage": "First page",
                                    "gotoPage": "Goto page",
                                    "inputRequiredError": "The comment text is a required field.",
                                    "lastPage": "Last page",
                                    "loadingDocument": "Preview image generation is in progress",
                                    "markerRequiredError": "You must place the marker first.",
                                    "markerTooltip": "You can put a marker with this button",
                                    "nextPage": "Next page",
                                    "okButton": "Ok",
                                    "previousPage": "Previous page",
                                    "print": "Print",
                                    "regenerateButton": "Generate",
                                    "regeneratePreviews": "The preview images are not generated yet. Do you want to generate them?",
                                    "reloadPage": "Reload page",
                                    "rotateDocumentLeft": "Rotate document left",
                                    "rotateDocumentRight": "Rotate document right",
                                    "rotatePageLeft": "Rotate page left",
                                    "rotatePageRight": "Rotate page right",
                                    "saveChanges": "Save changes",
                                    "search": "Search",
                                    "share": "Share",
                                    "showLess": "+ Show less",
                                    "showMore": "+ Show more",
                                    "submit": "Submit",
                                    "toggleComments": "Toggle comments",
                                    "toggleRedaction": "Toggle redaction",
                                    "toggleShapes": "Toggle shapes",
                                    "toggleThumbnails": "Toggle thumbnails",
                                    "toggleWatermark": "Toggle watermark",
                                    "zoomMode": "Zoom mode",
                                    "zoomModeFit": "Fit",
                                    "zoomModeFitHeight": "Fit height",
                                    "zoomModeFitWidth": "Fit width",
                                    "zoomModeOriginalSize": "Original size",
                                    "zooomModeCustom": "Custom",
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Button))
                                  color="primary"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(Button)
                                    classes={
                                      Object {
                                        "colorInherit": "MuiButton-colorInherit",
                                        "contained": "MuiButton-contained",
                                        "containedPrimary": "MuiButton-containedPrimary",
                                        "containedSecondary": "MuiButton-containedSecondary",
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "fullWidth": "MuiButton-fullWidth",
                                        "label": "MuiButton-label",
                                        "outlined": "MuiButton-outlined",
                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                        "root": "MuiButton-root",
                                        "sizeLarge": "MuiButton-sizeLarge",
                                        "sizeSmall": "MuiButton-sizeSmall",
                                        "text": "MuiButton-text",
                                        "textPrimary": "MuiButton-textPrimary",
                                        "textSecondary": "MuiButton-textSecondary",
                                      }
                                    }
                                    color="primary"
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                      component="button"
                                      disabled={false}
                                      focusRipple={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <ForwardRef(ButtonBase)
                                        className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        component="button"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName="Mui-focusVisible"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiButton-label"
                                          >
                                            + Add Comment
                                          </span>
                                          <NoSsr>
                                            <WithStyles(undefined)
                                              center={false}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={false}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(undefined)>
                                          </NoSsr>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(Button)>
                                </WithStyles(ForwardRef(Button))>
                              </CreateComment>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </Component>
                    </div>
                  </ForwardRef(Paper)>
                </WithStyles(ForwardRef(Paper))>
              </Transition>
            </ForwardRef(Slide)>
          </div>
        </ForwardRef(Drawer)>
      </WithStyles(ForwardRef(Drawer))>
    </div>
  </div>
</Component>
`;
